#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Jan  3 20:39:58 2024
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn /opt/forticlient/fortivpn connect artsoft_vpn -u sandrinopatrulescu -p -s -w
match_max 100000
expect -exact "password:"
send -- "$::env(SOGO_PASSWORD)\r"
expect -exact "\r
Connect VPN: artsoft_vpn\r
Status: Connecting...\r
=====================\r
Confirmation Required\r
---------------------\r
You are connecting to an untrusted server, which could put your confidential information at risk. Would you like to connect to this server?\r
\r
Hostname: 195.20.156.1\r
\r
Reason: X509 verify certificate failed\r
\r
Certificate:\r
	Subject name: /C=US/ST=California/L=Sunnyvale/O=Fortinet/OU=Certificate Authority/CN=fortinet-ca2/emailAddress=support@fortinet.com\r
	Fingerprint (SHA1): F1:83:E1:3F:B3:44:86:3F:0B:A1:3E:07:AE:B2:3C:B2:6B:7D:72:4B\r
\r
=====================\r
Confirm (y/n) \[default=n\]:Confirm (y/n) \[default=n\]:"
send -- "y\r"
expect eof
