#!/bin/bash
# artsoft consult connect
shopt -s expand_aliases
#set -x

source /home/kamui/.functions
source /home/kamui/.alias

AC_WORKSPACE_INDEX=3

#nohup remmina >/dev/null 2>&1 & sleep 0.2s && wmctrl -a 'kamui@an5: ~'
skypeforlinux && sleep 2s && wmctrl -rF 'Skype' -t $AC_WORKSPACE_INDEX

# while not connected to the vpn keep trying with a timeout
while true; do
    echo "!!! Open phone and approve the connection !!!"
    acvc && break
    i="40"
    step="10"
    while [ "$i" -gt 0 ]; do
        message="[LOG][$(fdateiso)] Waiting ${i} seconds to connect to VPN...(til $(date -d "+${i} seconds" +'%H:%M:%S'))"
#        echo "${message}"
        [ "$i" -le 25 ] && notify-send "acc" "${message}"
        modWithStep=$((i % step))
        [ "${modWithStep}" -ne 0 ] && step="${modWithStep}"
        sleep "${step}s"
        i=$((i - step))
        if [ "$i" -gt 25 ] && [ $((i % 10)) -eq 0 ]; then step=10; fi
        if [ "$i" -le 25 ] && [ $((i % 5)) -eq 0 ]; then step=5; fi
        [ "$i" -le 5 ] && step=1
    done
done

sleep 1s

# login to wol
while true; do
    echo "[LOG][$(fdateiso)] Trying to login to WOL..."
    acwl && ac::internal::wl_ok && break
    sleep 5s
done

# ping wol
isAlive=false
while [ true ]; do
    echo "[LOG][$(fdateiso)] Trying to ping WOL..."
    response="$(acwp)"
    echo "response: $response"
    ac::internal::wp_ok "${response}"; echo "wp_ok: $?"
    ac::internal::wp_alive "${response}"; echo "wp_alive: $?"
    [ $? -eq 0 ] || continue
    ac::internal::wp_ok "${response}" || continue
    ac::internal::wp_alive "${response}" && isAlive=true
    break
    sleep 5s
done

function waitToBoot() {
    local numberOfSeconds="$1"
    local numberOfShownSeconds="$2"
    echo "[LOG][$(fdateiso)] Waiting ${numberOfShownSeconds} seconds to boot...(til $(date -d "+${numberOfShownSeconds} seconds" +'%Y-%m-%dT%H:%M:%SZ'))"
    sleep "${numberOfSeconds}s"
}

#  if not alive then try to wake it up
[ "${isAlive}" = false ] && {
    while true; do
        echo "[LOG][$(fdateiso)] Trying to wake up WOL..."
        acww | ac::internal::ww_ok && break
        sleep 5s
    done

    bootWaitTime="${1:-60}" # 30 is too early, 34-70 ok

    i="${bootWaitTime}"
    step="$((bootWaitTime <= 25 ? 5 : 10))"
    step="$((bootWaitTime <= 5 ? 1 : 5))"
    while [ "$i" -gt 0 ]; do
        message="[LOG][$(fdateiso)] Waiting ${i} seconds to boot...(til $(date -d "+${i} seconds" +'%H:%M:%S'))"
        echo "${message}"
        notify-send "acc" "${message}"
        modWithStep=$((i % step))
        [ "${modWithStep}" -ne 0 ] && step="${modWithStep}"
        sleep "${step}s"
        i=$((i - step))
        if [ "$i" -gt 25 ] && [ $((i % 10)) -eq 0 ]; then step=10; fi
        if [ "$i" -le 25 ] && [ $((i % 5)) -eq 0 ]; then step=5; fi
        [ "$i" -le 5 ] && step=1
    done

#    secondWaitTime=10
#    secondWaitTimeThreshold=20
#    bootWaitTimeReduced=false
#    [ "${bootWaitTime}" -ge "${secondWaitTimeThreshold}" ] && {
#        bootWaitTimeReduced=true
#    }
#    waitToBoot $((bootWaitTime - secondWaitTime)) "$bootWaitTime"
#    [ "${bootWaitTimeReduced}" = true ] && {
#        waitToBoot "${secondWaitTime}" "${secondWaitTime}"
#    }
}

nohup remmina -c "/home/kamui/.local/share/remmina/group_rdp_artsoft-172_${SOGO_STATION_IP//./-}.remmina" `>/dev/null 2>&1` & # [1]
sleep 3s && wmctrl -r 'Artsoft 172' -t $AC_WORKSPACE_INDEX


# [1] https://stackoverflow.com/questions/9190151/how-to-run-a-command-in-the-background-and-get-no-output#comment133149106_29547803
